version: '3.9'

x-php-cli: &php-cli
    build:
        context: ./php-cli
        dockerfile: Dockerfile
        target: ${PHP_CLI_BUILD_TARGET:-${BUILD_TARGET?Build mode php-cli}}
    restart: unless-stopped
    working_dir: /var/project
    volumes:
        - ../:/var/project

services:
    # Nginx Service
    nginx:
        build:
            context: ./nginx
            dockerfile: Dockerfile
        container_name: ${COMPOSE_PROJECT_NAME?Not project name}-nginx
        restart: unless-stopped
        tty: true
        volumes:
            - ../:/var/project
        ports:
            - ${NGINX_SERVICE_PORT?Not nginx port}:80
        networks:
            - accounting-department

    # PHP Service
    php-fpm:
        build:
            context: ./php
            dockerfile: Dockerfile
            # target: ${PHP_FPM_BUILD_TARGET:-${BUILD_TARGET?Build mode php-fpm}}
            target: base
        container_name: ${COMPOSE_PROJECT_NAME?Not project name}-php-fpm
        restart: unless-stopped
        tty: true
        volumes:
            - ../:/var/project
        depends_on:
            - postgres
        networks:
            - accounting-department

    # PHP CLI Service
    php-cli:
        <<: *php-cli
        container_name: ${COMPOSE_PROJECT_NAME?Not project name}-php-cli
        restart: no
        networks:
            - accounting-department

    # Postgres Service
    postgres:
        image: postgres:15-alpine
        container_name: ${COMPOSE_PROJECT_NAME}-postgres
        restart: unless-stopped
        volumes:
            - ./postgresql/data/:/var/lib/postgresql/data/pgdata
        env_file:
            - ./postgresql/.env
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U departmentuser" ]
            interval: 5s
            timeout: 5s
            retries: 5
        command: postgres -c 'max_connections=1000'
        ports:
            - ${POSTGRES_SERVICE_PORT}:5432
        networks:
            - accounting-department

    # Swager Service
    swagger-ui:
        image: swaggerapi/swagger-ui
        container_name: ${COMPOSE_PROJECT_NAME}-swagger-ui
        ports:
            - ${SWAGGER_SERVICE_PORT}:8080
        volumes:
            - ../docs:/usr/share/nginx/html/doc
        environment:
            API_URL: doc/api-docs.yaml
            URLS_PRIMARY_NAME: "CheckServer"

    # Mailhog Service
    mailhog:
        image: mailhog/mailhog:latest
        container_name: ${COMPOSE_PROJECT_NAME?Not project name}-mailhog
        restart: unless-stopped
        depends_on:
            - php-fpm
        ports:
            - ${MAILHOG_SERVICE_INTERFACE_PORT?Not mailhog port}:8025
        networks:
            - accounting-department

    # Redis Service
    redis:
        image: redis:alpine
        container_name: ${COMPOSE_PROJECT_NAME?Not project name}-redis
        restart: unless-stopped
        ports:
            - ${REDIS_SERVICE_PORT?Not redis port}:6379
        volumes:
            - ./redis/data:/data
        healthcheck:
            test: [ 'CMD', 'redis-cli', 'ping' ]
            retries: 3
            timeout: 5s
        networks:
            - accounting-department

networks:
    accounting-department:
        driver: bridge
